PROGRAM -> DECLARATIONLIST eof.
DECLARATIONLIST -> DECLARATIONLIST DECLARATION |.
DECLARATION -> VARDECLARATION | FUNDECLARATION.
VARDECLARATION -> TYPESPECIFIER id ; | TYPESPECIFIER id bopen num bclose ;.
TYPESPECIFIER -> int | void.
FUNDECLARATION -> TYPESPECIFIER id ( PARAMS ) COMPOUNDSTMT.
PARAMS -> PARAMLIST | void.
PARAMLIST -> PARAMLIST comma PARAM | PARAM.
PARAM -> TYPESPECIFIER id | TYPESPECIFIER id bopen bclose.
COMPOUNDSTMT -> aopen DECLARATIONLIST STATEMENTLIST aclose.
STATEMENTLIST -> STATEMENTLIST STATEMENT | .
STATEMENT -> EXPRESSIONSTMT | COMPOUNDSTMT | SELECTIONSTMT | ITERATIONSTMT | RETURNSTMT | SWITCHSTMT.
EXPRESSIONSTMT -> EXPRESSION ; | continue ; | break ; | ;.
SELECTIONSTMT -> if ( EXPRESSION ) STATEMENT else STATEMENT.
ITERATIONSTMT -> while ( EXPRESSION ) STATEMENT.
RETURNSTMT -> return ; | return EXPRESSION ;.
SWITCHSTMT -> switch ( EXPRESSION ) aopen CASESTMTS DEFAULTSTMT aclose.
CASESTMTS -> CASESTMTS CASESTMT | .
CASESTMT -> case num : STATEMENTLIST.
DEFAULTSTMT -> default : STATEMENTLIST | .
EXPRESSION -> VAR equal EXPRESSION | SIMPLEEXPRESSION.
VAR -> id | id bopen EXPRESSION bclose.
SIMPLEEXPRESSION -> ADDITIVEEXPRESSION RELOP ADDITIVEEXPRESSION | ADDITIVEEXPRESSION.
RELOP -> less | equalequal.
ADDITIVEEXPRESSION -> ADDITIVEEXPRESSION ADDOP TERM | TERM.
ADDOP -> + | minus.
TERM -> SIGNEDFACTOR TERM2.
TERM2 -> * SIGNEDFACTOR TERM2 |.
SIGNEDFACTOR -> FACTOR | + FACTOR |  FACTOR.
FACTOR -> ( EXPRESSION ) | VAR | CALL | num.
CALL -> id ( ARGS ).
ARGS -> ARGLIST | .
ARGLIST -> ARGLIST comma EXPRESSION | EXPRESSION.

/* best version */