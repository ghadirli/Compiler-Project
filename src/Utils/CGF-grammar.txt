PROGRAM -> DECLARATIONLIST eof.
DECLARATIONLIST ->DECLARATION DECLARATIONLIST |.
DECLARATION -> TYPESPECIFIER id DECLARATION2.
DECLARATION2 -> ; | bopen num blose ; | ( PARAMS ) COMPOUNDSTMT.
TYPESPECIFIER -> int | void.
PARAMS -> PARAMLIST | void.
PARAMLIST -> PARAM PARAMLIST2.
PARAMLIST2 -> comma PARAM PARAMLIST2 |.
PARAM -> TYPESPECIFIER id PARAM2.
PARAM2 -> bopen bclose |.
COMPOUNDSTMT -> aopen DECLARATIONLIST STATEMENTLIST aclose.
STATEMENTLIST -> STATEMENT STATEMENTLIST | .
STATEMENT -> EXPRESSIONSTMT | COMPOUNDSTMT | SELECTIONSTMT | ITERATIONSTMT | RETURNSTMT | SWITCHSTMT.
EXPRESSIONSTMT -> EXPRESSION ; | continue ; | break ; | ;.
SELECTIONSTMT -> if ( EXPRESSION ) STATEMENT else STATEMENT.
ITERATIONSTMT -> while ( EXPRESSION ) STATEMENT.
RETURNSTMT -> return RETURNSTMT2.
RETURNSTMT2 -> ; | EXPRESSION ;.
SWITCHSTMT -> switch ( EXPRESSION ) aopen CASESTMTS DEFAULTSTMT aclose.
CASESTMTS -> CASESTMT CASESTMTS | .
CASESTMT -> case num : STATEMENTLIST.
DEFAULTSTMT -> default : STATEMENTLIST | .
EXPRESSION -> VAR equal EXPRESSION | SIMPLEEXPRESSION.
VAR -> id | id bopen EXPRESSION bclose.
SIMPLEEXPRESSION -> ADDITIVEEXPRESSION RELOP ADDITIVEEXPRESSION | ADDITIVEEXPRESSION.
RELOP -> less | equalequal.
ADDITIVEEXPRESSION -> TERM ADDITIVEEXPRESSION2.
ADDITIVEEXPRESSION2 -> ADDOP TERM ADDITIVEEXPRESSION2 |.
ADDOP -> + | minus.
TERM -> SIGNEDFACTOR TERM2.
TERM2 -> * SIGNEDFACTOR TERM2 |.
SIGNEDFACTOR -> FACTOR | + FACTOR |  FACTOR.
FACTOR -> ( EXPRESSION ) | VAR | CALL | num.
CALL -> id ( ARGS ).
ARGS -> ARGLIST | .
ARGLIST -> EXPRESSION ARGLIST2.
ARGLIST2 -> comma EXPRESSION ARGLIST2 |.

/* best version */