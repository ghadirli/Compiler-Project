PROGRAM -> DECLARATIONLIST eof.
DECLARATIONLIST -> DECLARATION DECLARATIONLIST |.
DECLARATION -> void id DECLARATION2 | int id DECLARATION2.
DECLARATION2 -> VARDECLARATION2 | ( PARAMS ) COMPOUNDSTMT.
VARDECLARATION2 -> ; | bopen num bclose ; .
PARAMS -> int id PARAM2 PARAMLIST2 | void PARAMS2.
PARAMS2 -> id PARAM2 PARAMLIST2 | .
PARAMLIST2 -> comma PARAMLIST3 | .
PARAMLIST3 -> int id PARAM2 PARAMLIST2 | void id PARAM2 PARAMLIST2.
PARAM2 -> bopen bclose |.
COMPOUNDSTMT -> aopen DECLARATIONLIST STATEMENTLIST aclose.
STATEMENTLIST -> STATEMENT STATEMENTLIST |.
STATEMENT -> EXPRESSIONSTMT | COMPOUNDSTMT | SELECTIONSTMT | ITERATIONSTMT | RETURNSTMT | SWITCHSTMT.
EXPRESSIONSTMT -> EXPRESSION ; | continue ; | break ; | ;.
SELECTIONSTMT -> if ( EXPRESSION ) STATEMENT else STATEMENT.
ITERATIONSTMT -> while ( EXPRESSION ) STATEMENT.
RETURNSTMT -> return RETURNSTMT2.
RETURNSTMT2 -> ; | EXPRESSION ;.
SWITCHSTMT -> switch ( EXPRESSION ) aopen CASESTMTS DEFAULTSTMT aclose.
CASESTMTS -> CASESTMT CASESTMTS |.
CASESTMT -> case num : STATEMENTLIST.
DEFAULTSTMT -> default : STATEMENTLIST | .
EXPRESSION -> id EXPRESSION2 | num TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2 | ( EXPRESSION ) TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2 | + FACTOR TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2 | minus FACTOR TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2.
EXPRESSION2 -> VAR2 EXPRESSION3 | ( ARGS ) TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2.
EXPRESSION3 -> equal EXPRESSION | TERM2 ADDITIVEEXPRESSION2 SIMPLEEXPRESSION2.
VAR2 -> bopen EXPRESSION bclose | .
SIMPLEEXPRESSION2 -> RELOP SIGNEDFACTOR TERM2 ADDITIVEEXPRESSION2 | .
RELOP -> less | equalequal.
ADDITIVEEXPRESSION2 -> ADDOP SIGNEDFACTOR TERM2 ADDITIVEEXPRESSION2 |.
ADDOP -> + | minus.
TERM2 -> * SIGNEDFACTOR TERM2 | .
SIGNEDFACTOR -> FACTOR | + FACTOR | minus FACTOR.
FACTOR -> ( EXPRESSION ) | id FACTOR2 | num.
FACTOR2 -> VAR2 | ( ARGS ).
ARGS -> ARGLIST | .
ARGLIST -> EXPRESSION ARGLIST2.
ARGLIST2 -> comma EXPRESSION ARGLIST2 | .


/* official grammar */